{"version":3,"sources":["data/Visual.js","Map/Map.js","Map/Zones.js","App.js","serviceWorker.js","index.js"],"names":["visualAreas","lng","lat","MyMapComponent","compose","withProps","googleMapURL","loadingElement","react_default","a","createElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","lib","className","defaultZoom","defaultCenter","isMarkerShown","console","log","position","path","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","Zones","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","point","geometry","coordinates","pt","polygon","inside","poly","inCity","i","length","inZone","name","id","Map","whichZone","React","Component","type","properties","marker-color","App","Math","random","toFixed","src_Map_Zones","Number","getRandomLat","getRandomLng","PureComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","longitude","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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BC,IAAK,mBAC7B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,kBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,iBAAkBC,IAAK,mBAC7B,CAACD,IAAK,iBAAkBC,IAAK,mBAC7B,CAACD,IAAK,iBAAkBC,IAAK,mBAC7B,CAACD,IAAK,iBAAkBC,IAAK,mBAC7B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,kBAC9B,CAACD,IAAK,kBAAmBC,IAAK,oBAElC,CACI,CAACD,IAAK,kBAAmBC,IAAK,kBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,kBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,kBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,kBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CAACD,IAAK,kBAAmBC,IAAK,mBAC9B,CA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","file":"static/js/main.94732321.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst visualAreas = [\r\n    [\r\n        {lng: 21.26611070474684, lat:48.71747233752024 },\r\n        {lng: 21.26677057260064, lat:48.7166656329094 },\r\n        {lng: 21.26733501059712, lat:48.71580643787797 },\r\n        {lng: 21.26736251032685, lat:48.71506900706372 },\r\n        {lng: 21.26787794664388, lat:48.71522719318407 },\r\n        {lng: 21.26863753908857, lat:48.71564341994283 },\r\n        {lng: 21.26939765866221, lat:48.7165793537183 },\r\n        {lng: 21.26966608133456, lat:48.71705623649765 },\r\n        {lng: 21.2700354118865, lat:48.71810770591586 },\r\n        {lng: 21.26997332089527, lat:48.7191243873018 },\r\n        {lng: 21.26983990777152, lat:48.71950690161629 },\r\n        {lng: 21.26961203577385, lat:48.71985312035518 },\r\n        {lng: 21.26952666240232, lat:48.72010880822562 },\r\n        {lng: 21.26563569264007, lat:48.71916037050208 },\r\n        {lng: 21.26514480493235, lat:48.71891109363376 },\r\n        {lng: 21.26509721628115, lat:48.7188554432751 },\r\n        {lng: 21.26536273350709, lat:48.7185281920167 },\r\n        {lng: 21.26556396469884, lat:48.71822838645928 },\r\n        {lng: 21.26546293573485, lat:48.71807364484813 },\r\n        {lng: 21.26611070474684, lat:48.71747233752024 }\r\n    ],\r\n    [\r\n        {lng: 21.26547050283314, lat: 48.7180247747018},\r\n        {lng: 21.26527968071111, lat: 48.71785419829027},\r\n        {lng: 21.26305027934983, lat: 48.71718488634205},\r\n        {lng: 21.26115181682349, lat: 48.71652099525235},\r\n        {lng: 21.2610597168518, lat: 48.71639511662697},\r\n        {lng: 21.26101897307229, lat: 48.71621806298811},\r\n        {lng: 21.26117489079277, lat: 48.71568906138102},\r\n        {lng: 21.26105443891036, lat: 48.71553269979366},\r\n        {lng: 21.26093484273553, lat: 48.71552454466993},\r\n        {lng: 21.26100549017809, lat: 48.71338925367411},\r\n        {lng: 21.26149478781841, lat: 48.71336434978812},\r\n        {lng: 21.26385639684157, lat: 48.71298856665499},\r\n        {lng: 21.26548532983888, lat: 48.71270296490634},\r\n        {lng: 21.26562333198163, lat: 48.71267801671256},\r\n        {lng: 21.26617278866978, lat: 48.71342104937738},\r\n        {lng: 21.26699077839916, lat: 48.71447335210421},\r\n        {lng: 21.26729965113388, lat: 48.71508104882709},\r\n        {lng: 21.26727217408974, lat: 48.71573150741328},\r\n        {lng: 21.26654344778259, lat: 48.71675222358159},\r\n        {lng: 21.26591932336909, lat: 48.71757110459762},\r\n        {lng: 21.26591842008419, lat: 48.71758397749612},\r\n        {lng: 21.26547050283314, lat: 48.7180247747018}\r\n    ],\r\n    [\r\n        {lng: 21.26519784797037, lat: 48.70985603691767},\r\n        {lng: 21.26511576992167, lat: 48.71057959332373},\r\n        {lng: 21.26520990237419, lat: 48.71123643432868},\r\n        {lng: 21.26533737357676, lat: 48.71203091544061},\r\n        {lng: 21.26561979794789, lat: 48.71265567908304},\r\n        {lng: 21.26374642074399, lat: 48.71298960699437},\r\n        {lng: 21.26153382267446, lat: 48.71333329104842},\r\n        {lng: 21.26102884803088, lat: 48.71338086924755},\r\n        {lng: 21.2609183320457, lat: 48.71260902704344},\r\n        {lng: 21.26070104346984, lat: 48.71155764597685},\r\n        {lng: 21.26054648625838, lat: 48.71153955221462},\r\n        {lng: 21.2601172427277, lat: 48.71139081390589},\r\n        {lng: 21.26019610409673, lat: 48.71086778257981},\r\n        {lng: 21.2604087054693, lat: 48.710414709603},\r\n        {lng: 21.26082834273807, lat: 48.71019169201519},\r\n        {lng: 21.26140109005772, lat: 48.70823500536864},\r\n        {lng: 21.26209252754881, lat: 48.70834086536124},\r\n        {lng: 21.2639630772545, lat: 48.70869971530973},\r\n        {lng: 21.26541784542476, lat: 48.7090956643532},\r\n        {lng: 21.26519784797037, lat: 48.70985603691767}\r\n    ],\r\n    [\r\n        {lng: 21.26093929797893, lat: 48.71553884312244},\r\n        {lng: 21.25956837554779, lat: 48.71543628382558},\r\n        {lng: 21.25938146868774, lat: 48.71548086745317},\r\n        {lng: 21.25919873118457, lat: 48.7162052630725},\r\n        {lng: 21.25908567651335, lat: 48.71630286457113},\r\n        {lng: 21.25771904746958, lat: 48.71618396720437},\r\n        {lng: 21.25629818432859, lat: 48.7161355301045},\r\n        {lng: 21.25396640727181, lat: 48.71629547139239},\r\n        {lng: 21.25365568727686, lat: 48.71629661455108},\r\n        {lng: 21.25416063177569, lat: 48.71491440773607},\r\n        {lng: 21.25445221976243, lat: 48.71428525246247},\r\n        {lng: 21.25536222202151, lat: 48.7126374101989},\r\n        {lng: 21.25798135383886, lat: 48.71294303343348},\r\n        {lng: 21.25848530366077, lat: 48.71207672884289},\r\n        {lng: 21.25887388879129, lat: 48.71117286140461},\r\n        {lng: 21.26013638689832, lat: 48.71143237743076},\r\n        {lng: 21.26064082683656, lat: 48.71157019458366},\r\n        {lng: 21.26088366984189, lat: 48.71265039448959},\r\n        {lng: 21.26097627407855, lat: 48.7133548225837},\r\n        {lng: 21.26093971071423, lat: 48.71490900996002},\r\n        {lng: 21.26093929797893, lat: 48.71553884312244}\r\n    ],\r\n    [\r\n        {lng: 21.25472165728956, lat: 48.71372440979044},\r\n        {lng: 21.25408438944113, lat: 48.71490573905383},\r\n        {lng: 21.25360554768534, lat: 48.71631056148008},\r\n        {lng: 21.25249997810609, lat: 48.71638710016956},\r\n        {lng: 21.25137077836182, lat: 48.71649739198809},\r\n        {lng: 21.25022306219866, lat: 48.71648488221292},\r\n        {lng: 21.2490611330737, lat: 48.71624262581696},\r\n        {lng: 21.24811421777093, lat: 48.7159646221086},\r\n        {lng: 21.24789641095867, lat: 48.71580265853636},\r\n        {lng: 21.24756227947157, lat: 48.71490193659645},\r\n        {lng: 21.24689327484613, lat: 48.71423288765796},\r\n        {lng: 21.246193645965, lat: 48.71344141182617},\r\n        {lng: 21.2461672930893, lat: 48.71307316505337},\r\n        {lng: 21.24616030245655, lat: 48.71242516467778},\r\n        {lng: 21.24657869594728, lat: 48.71217905800653},\r\n        {lng: 21.24735089378054, lat: 48.71181233634876},\r\n        {lng: 21.24808480234424, lat: 48.71175232186651},\r\n        {lng: 21.25010943555728, lat: 48.71198525715902},\r\n        {lng: 21.25211322156024, lat: 48.71222068143718},\r\n        {lng: 21.25534658689924, lat: 48.71262713203102},\r\n        {lng: 21.25472165728956, lat: 48.71372440979044}\r\n    ],\r\n    [\r\n        {lng: 21.24762543517939, lat: 48.71507559632108},\r\n        {lng: 21.24779832024527, lat: 48.71569962867616},\r\n        {lng: 21.24811259488715, lat: 48.71598017711926},\r\n        {lng: 21.24925026172382, lat: 48.71630092260156},\r\n        {lng: 21.24981361136224, lat: 48.71640655433272},\r\n        {lng: 21.25025771564709, lat: 48.71650426269373},\r\n        {lng: 21.2512552906116, lat: 48.71651444182268},\r\n        {lng: 21.25106626426203, lat: 48.71676512361263},\r\n        {lng: 21.25091304252969, lat: 48.71727165690777},\r\n        {lng: 21.24999323902147, lat: 48.71933204009806},\r\n        {lng: 21.2490086364203, lat: 48.72185921662868},\r\n        {lng: 21.24834121326643, lat: 48.72173738095717},\r\n        {lng: 21.24748362933934, lat: 48.72153453624821},\r\n        {lng: 21.24679597736004, lat: 48.72095042997029},\r\n        {lng: 21.24646518007734, lat: 48.72043589645202},\r\n        {lng: 21.24574470302384, lat: 48.7197520966581},\r\n        {lng: 21.24475042321631, lat: 48.71946451103504},\r\n        {lng: 21.2442994359997, lat: 48.71943932927449},\r\n        {lng: 21.2435565007966, lat: 48.71969720361033},\r\n        {lng: 21.2447040629857, lat: 48.71842664957458},\r\n        {lng: 21.2454265062367, lat: 48.71735920104305},\r\n        {lng: 21.24613655863114, lat: 48.71603741282299},\r\n        {lng: 21.24673750260858, lat: 48.71522701384458},\r\n        {lng: 21.24734368412505, lat: 48.7147143337582},\r\n        {lng: 21.24762543517939, lat: 48.71507559632108}\r\n    ],\r\n    [\r\n        {lng: 21.23998585622233, lat: 48.7282365574844},\r\n        {lng: 21.23985866413909, lat: 48.72817080687056},\r\n        {lng: 21.24013913756911, lat: 48.72719851235855},\r\n        {lng: 21.24007503266786, lat: 48.72677946556882},\r\n        {lng: 21.23968736331943, lat: 48.72605710958513},\r\n        {lng: 21.24130372968173, lat: 48.7242382800459},\r\n        {lng: 21.24217667018128, lat: 48.72337004216646},\r\n        {lng: 21.24312326999303, lat: 48.72108677112601},\r\n        {lng: 21.24343190033521, lat: 48.7206280567704},\r\n        {lng: 21.24352427817819, lat: 48.72050606621131},\r\n        {lng: 21.24349300044926, lat: 48.71984566843857},\r\n        {lng: 21.24356624475161, lat: 48.71968916962285},\r\n        {lng: 21.24430336078594, lat: 48.71945117715176},\r\n        {lng: 21.24498301247103, lat: 48.71950244894092},\r\n        {lng: 21.24580276652635, lat: 48.71979629819641},\r\n        {lng: 21.24638341466877, lat: 48.72037051501643},\r\n        {lng: 21.24680980022674, lat: 48.72097962568189},\r\n        {lng: 21.24748934214103, lat: 48.72154965043365},\r\n        {lng: 21.24831896265438, lat: 48.7217480601651},\r\n        {lng: 21.24900896109615, lat: 48.72186779034558},\r\n        {lng: 21.24894346442524, lat: 48.72311998437224},\r\n        {lng: 21.24926555767555, lat: 48.72423104307102},\r\n        {lng: 21.24955282910881, lat: 48.72523579830723},\r\n        {lng: 21.24959053108643, lat: 48.72589917795416},\r\n        {lng: 21.24966213402141, lat: 48.72624597887943},\r\n        {lng: 21.2493479654383, lat: 48.72650338900477},\r\n        {lng: 21.24742539975195, lat: 48.72671003625491},\r\n        {lng: 21.24518207742631, lat: 48.72683907932414},\r\n        {lng: 21.24354914482565, lat: 48.72740959066663},\r\n        {lng: 21.23998585622233, lat: 48.7282365574844}\r\n    ],\r\n    [\r\n        {lng: 21.24348895165045, lat: 48.72743570209995},\r\n        {lng: 21.24517418757853, lat: 48.72686808327852},\r\n        {lng: 21.24596198813259, lat: 48.72681830820019},\r\n        {lng: 21.24772962148258, lat: 48.72670107829632},\r\n        {lng: 21.24940505850739, lat: 48.7264333385232},\r\n        {lng: 21.25099701951217, lat: 48.7263458262926},\r\n        {lng: 21.25462844416774, lat: 48.72713542477074},\r\n        {lng: 21.25689877479911, lat: 48.72775639125265},\r\n        {lng: 21.25614102123237, lat: 48.72893223839031},\r\n        {lng: 21.25461503831459, lat: 48.73093050766331},\r\n        {lng: 21.25409862836972, lat: 48.73159571074882},\r\n        {lng: 21.25388424638046, lat: 48.73213613317694},\r\n        {lng: 21.2508810074242, lat: 48.73093612113485},\r\n        {lng: 21.2501537808952, lat: 48.73161259370071},\r\n        {lng: 21.24004781534205, lat: 48.72825739221243},\r\n        {lng: 21.24348895165045, lat: 48.72743570209995}\r\n    ],\r\n    [\r\n        {lng: 21.25422159936233, lat: 48.73159016166506},\r\n        {lng: 21.25645395766081, lat: 48.72863576705247},\r\n        {lng: 21.25705895290891, lat: 48.72873642476408},\r\n        {lng: 21.26067137802806, lat: 48.72965080742076},\r\n        {lng: 21.26140284964983, lat: 48.73002730797457},\r\n        {lng: 21.26222338834974, lat: 48.73019337176834},\r\n        {lng: 21.26388520328283, lat: 48.73057787804311},\r\n        {lng: 21.26323446520548, lat: 48.73181454379262},\r\n        {lng: 21.26245168571889, lat: 48.73344060385425},\r\n        {lng: 21.26223945886888, lat: 48.73354833563128},\r\n        {lng: 21.26208027794174, lat: 48.73344490869111},\r\n        {lng: 21.26122099200491, lat: 48.73265280518574},\r\n        {lng: 21.25794836910048, lat: 48.732516011485},\r\n        {lng: 21.2558203376639, lat: 48.73236498396957},\r\n        {lng: 21.25476030844651, lat: 48.73231710274598},\r\n        {lng: 21.25391707270884, lat: 48.73213385899712},\r\n        {lng: 21.25422159936233, lat: 48.73159016166506}\r\n    ],\r\n    [\r\n        {lng: 21.26394491414724, lat: 48.73054329222214},\r\n        {lng: 21.26200288598048, lat: 48.73008117863233},\r\n        {lng: 21.2614003103509, lat: 48.7300175490298},\r\n        {lng: 21.26078651689782, lat: 48.72965038418978},\r\n        {lng: 21.26056833578211, lat: 48.72864824350508},\r\n        {lng: 21.26065881826214, lat: 48.72808299460048},\r\n        {lng: 21.26118832045295, lat: 48.7273044878168},\r\n        {lng: 21.26260983038338, lat: 48.72677237225551},\r\n        {lng: 21.26370734991203, lat: 48.72648277398645},\r\n        {lng: 21.26526302744209, lat: 48.72605953564047},\r\n        {lng: 21.2657549235912, lat: 48.72593124590239},\r\n        {lng: 21.26639282745298, lat: 48.72586470610221},\r\n        {lng: 21.26493779990923, lat: 48.72876735791608},\r\n        {lng: 21.26394491414724, lat: 48.73054329222214}\r\n    ],\r\n    [\r\n        {lng: 21.23469619776246, lat: 48.73262185704039},\r\n        {lng: 21.24147458887668, lat: 48.70546688266992},\r\n        {lng: 21.27658647859255, lat: 48.70659340320557},\r\n        {lng: 21.2732803873103, lat: 48.73386149130498},\r\n        {lng: 21.23469619776246, lat: 48.73262185704039}\r\n    ]\r\n];\r\n\r\nconst reverse = (toMap) => {\r\n    return toMap.map( l => {\r\n        return {lat: l.lng, lng: l.lat}\r\n    });\r\n};\r\n\r\n/***\r\n //does not work for left bottom where expected val is [-1,-1]...\r\n //it is quick but useless\r\n const anAlgorithm = (area, position) => {\r\n    var latSum = 0, lngSum = 0;\r\n    console.log(area);\r\n    console.log(position);\r\n    for (var i = 0; i < area.length; i++){\r\n        let latLengthToPoint = area[i].lat - position.lat;\r\n        // console.log(area[i].lat + \" \" +  position.lat);\r\n        // console.log(area[i].lng + \" \" +  position.lng);\r\n        // console.log(latLengthToPoint);\r\n        let latAbsolutePosition = Math.abs(latLengthToPoint);\r\n        // console.log(latAbsolutePosition);\r\n        let latMagic = latAbsolutePosition + area[i].lat;\r\n        console.log(latMagic);\r\n\r\n        latSum += latMagic;\r\n\r\n        let lngLengthToPoint = area[i].lng - position.lng;\r\n        // console.log(area[i].lat + \" \" +  position.lat);\r\n        // console.log(area[i].lng + \" \" +  position.lng);\r\n        // console.log(lngLengthToPoint);\r\n        let lngAbsolutePosition = Math.abs(lngLengthToPoint);\r\n        // console.log(lngAbsolutePosition);\r\n        let lngMagic = lngAbsolutePosition + area[i].lng;\r\n        // console.log(lngMagic);\r\n\r\n        lngSum += lngMagic;\r\n    }\r\n    console.log(latSum);\r\n    console.log(area.length * position.lat);\r\n    console.log(lngSum);\r\n    console.log(area.length * position.lng);\r\n\r\n    let latResult = latSum - (area.length * position.lat);\r\n    let lngResult = lngSum - (area.length * position.lng);\r\n\r\n    console.log(\"\\nLat Result is: \" + latResult + \" and Lng result is: \" + lngResult);\r\n    return (!(latResult === 0 && lngResult === 0));\r\n};\r\n***/\r\n\r\nexport default visualAreas;\r\n\r\n","import React from \"react\"\r\nimport {\r\n    compose,\r\n    withProps\r\n} from \"recompose\"\r\nimport {\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker,\r\n    Polygon\r\n} from \"react-google-maps\"\r\nimport visualAreas from '../data/Visual'\r\n\r\nconst MyMapComponent = compose(\r\n    withProps({\r\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCJU7scD4uZ0nZDS3stMHieSEnLj1mbhxY&callback=initMap\",\r\n        loadingElement: <div style={{ height: `100%` }} />,\r\n        containerElement: <div style={{ height: `100vh` }} />,\r\n        mapElement: <div style={{ height: `100%` }} />,\r\n\r\n    }),\r\n    withScriptjs,\r\n    withGoogleMap\r\n)((props) =>\r\n    <GoogleMap className={\"googleMap\"}\r\n               defaultZoom={14}\r\n               defaultCenter={{ lat: 48.720228, lng: 21.258217 }}\r\n    >\r\n        {props.isMarkerShown }\r\n        {/*<Marker position={marker} onClick={props.onMarkerClick}/>*/}\r\n        {console.log(typeof props.lat+ \" \" +  typeof props.lng)}\r\n        <Marker position={{lat: props.lat, lng: props.lng}}/>\r\n        {/*{\r\n            iterate through field and write what u should\r\n        }*/}\r\n        <Polygon\r\n            path={visualAreas[0]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[1]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[2]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[3]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[4]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[5]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[6]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[7]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[8]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[9]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n        <Polygon\r\n            path={visualAreas[10]}\r\n            //key={1}\r\n            options={{\r\n                fillColor: \"#f477ff\",\r\n                fillOpacity: 0.4,\r\n                strokeColor: \"#7a5a99\",\r\n                strokeOpacity: 1,\r\n                strokeWeight: 1\r\n            }} />\r\n    </GoogleMap>\r\n);\r\n\r\nexport default MyMapComponent;\r\n","import React from \"react\"\r\nimport {\r\n    booleanPointInPolygon, inside\r\n} from '@turf/turf'\r\n\r\nimport poly from '../data/data.json';\r\nimport MyMapComponent from './Map'\r\nimport './Zones.css'\r\n\r\n//I can do compose => withProps but oke\r\nclass Zones extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {point}\r\n        //this is not the greatest way to do it\r\n        point.geometry.coordinates[0] = this.props.lat;\r\n        point.geometry.coordinates[1] = this.props.lng;\r\n    }\r\n\r\n    inZone(pt, polygon) {\r\n        return inside(pt, polygon) ? true : false;\r\n    };\r\n\r\n    inCity(){\r\n        if(inside(point, poly[10])){\r\n            //you are inside the city!\r\n            console.log(\"Welcome to Kosice!\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    whichZone(){\r\n        if(!this.inCity()){\r\n            return \"You are not inside the city!\\n\"\r\n        }\r\n\r\n        for(var i = 0; i < poly.length-1; i++){\r\n            if (this.inZone(point, poly[i])){\r\n                return \"You are inside the \" + poly[i].name + \"\\n\"\r\n            }\r\n        }\r\n\r\n        return \"Welcome to the city\"\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div id={\"coords\"}>\r\n                    <p>{this.props.lat + \" \" +  this.props.lng}</p>\r\n                </div>\r\n\r\n                <MyMapComponent\r\n                    isMarkerShown={this.props.isMarkerShown}\r\n                    lat={this.props.lat}\r\n                    lng={this.props.lng}\r\n                />\r\n                <div id={\"center\"}>\r\n                    {this.whichZone()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst point = {\r\n    \"type\": \"Feature\",\r\n    \"properties\": {\r\n        \"marker-color\": \"#f00\"\r\n    },\r\n    \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [0, 0]\r\n    }\r\n};\r\n\r\n\r\nexport default Zones;","import React from \"react\"\nimport './App.css'\nimport Zones from './Map/Zones'\n\nclass App extends React.PureComponent {\n    state = {\n        isMarkerShown: true,\n    };\n\n    getRandomLat(){\n        var lat = (Math.random() * ( 48.737575 - 48.704053) + 48.704053).toFixed(6);\n        console.log(lat);\n        return lat;\n    }\n\n    getRandomLng(){\n        var lng = (Math.random() * ( 21.229523 - 21.288506) + 21.288506).toFixed(6);\n        console.log(lng);\n        return lng\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Zones\n                    isMarkerShown={this.state.isMarkerShown}\n                        lat={Number(this.getRandomLat())}\n                        lng={Number(this.getRandomLng())}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App longitude={\"\"}/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}